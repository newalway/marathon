<?php

namespace ProjectBundle\Repository;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends \Doctrine\ORM\EntityRepository
{
  public function findAllData($arr_query_data=false)
  {
    $qb = $this->createQueryBuilder('b')
                ->orderBy('b.position', 'ASC')
                ->addOrderBy('b.publicDate', 'DESC')
                ->addOrderBy('b.createdAt', 'DESC');
    $q = $arr_query_data['q'];
    if($q){
      $qb->where($qb->expr()->orX(
        $qb->expr()->like('b.title', ':query'),
        $qb->expr()->like('b.shortDesc', ':query'),
        $qb->expr()->like('b.description', ':query')
      ))
      ->setParameter('query', '%'.$q.'%');
    }
    return $qb;
  }

  public function findAllActiveData($arr_query_data=false)
  {
    $qb = $this->findAllData($arr_query_data);
    $qb->andWhere($qb->expr()->andX(
          $qb->expr()->like('b.status', ':status'),
          $qb->expr()->lte('b.publicDate', ':publicdate')
        ))
        ->setParameter('status',1)
        ->setParameter('publicdate',date('Y-m-d'))
      ;
    return $qb;
  }

  public function getActiveDataByRecent($id)
  {
    $qb = $this->findAllActiveData();
    $qb->andWhere($qb->expr()->andX(
        $qb->expr()->notLike('b.id', ':id')
    ))
    ->setParameter('id', $id);
    return $qb;
  }

  public function getActiveDataById($id)
  {
    $qb = $this->findAllActiveData();
    $qb->andWhere($qb->expr()->andX(
          $qb->expr()->like('b.id', ':id')
        ))
        ->setParameter('id',$id)
      ;
    return $qb;
  }
}
