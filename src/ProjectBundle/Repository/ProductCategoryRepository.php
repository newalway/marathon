<?php

namespace ProjectBundle\Repository;

use Gedmo\Tree\Entity\Repository\NestedTreeRepository;
#extends \Doctrine\ORM\EntityRepository

use Symfony\Component\Intl\Locale;

/**
 * ProductCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductCategoryRepository extends NestedTreeRepository
{
	private $qb;

	public function findDataByRootId($root_id=false, $locale=false)
	{
		$this->qb = $this->createQueryBuilder('c');
		$this->qb->select('c', 'ct')
			->join('c.translations', 'ct')
			->orderBy('c.root, c.lft', 'ASC');

		if($root_id){
			$this->qb->where('c.root = '.$root_id);
		}

		if($locale){
			$this->qb->andWhere("ct.locale = '$locale'");
		}

		//remove level 0
		$this->qb->andWhere("c.lvl <> 0");

		return $this->qb;
	}

	public function findChildrenByParentId($parent_id, $locale=false)
	{
		$this->qb = $this->createQueryBuilder('c');
		$this->qb->select('c', 'ct')
			->join('c.translations', 'ct')
			->where('c.parent = '.$parent_id)
			->orderBy('c.root, c.lft', 'ASC');

		//remove level 0
		$this->qb->andWhere("c.lvl <> 0");

		return $this->qb;
	}

	public function findHighlightDataByRootId($root_id=false, $product_category_id=false, $locale=false)
	{
		$locale = ($locale) ? $locale : Locale::getDefault();
		$this->findDataByRootId($root_id, $locale);

		$this->qb->andWhere("c.isHighlight = 1");

		$this->qb->addSelect('tcg', 'tcgt')
			->leftJoin('c.templateCustomerGroups', 'tcg')
			->leftJoin('tcg.translations', 'tcgt');

		if($product_category_id){
			$this->qb->addSelect('cg', 'cgt')
				->leftJoin('tcg.customerGroup', 'cg')
				->leftJoin('cg.translations', 'cgt')
				->andWhere("c.id = ".$product_category_id);
		}

		return $this->qb;
	}
}
