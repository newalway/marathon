<?php

namespace ProjectBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;
use Symfony\Component\Intl\Locale;

/**
 * PromotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends \Doctrine\ORM\EntityRepository
{
	public function findAllData($arr_query_data=false)
	{
		$qb = $this->createQueryBuilder('n');
		//join translation
		$qb->leftJoin('n.translations', 'nt')
			->select('n', 'nt')
			->orderBy('n.startDate', 'DESC')
			->addOrderBy('n.createdAt', 'DESC');

		$q = $arr_query_data['q'];
		if($q){
			$qb->where($qb->expr()->orX(
				$qb->expr()->like('n.title', ':query'),
				$qb->expr()->like('n.shortDesc', ':query'),
				$qb->expr()->like('n.description', ':query')
			))
			->setParameter('query', '%'.$q.'%');
		}
		return $qb;
	}

	public function findAllActiveData($arr_query_data=false, $locale=false)
	{
		$locale = ($locale) ? $locale : Locale::getDefault();
		$qb = $this->findAllData($arr_query_data)
			->andWhere('n.status = 1 ')
			->andWhere("nt.locale = '$locale'")
			->andWhere('(
				((n.isEndDate = 1 AND NOW() BETWEEN n.startDate AND n.endDate))
				OR n.isEndDate = 0 AND NOW() >= n.startDate)
			')
			->groupBy('n.id')

			// ->andWhere('
			//   CASE
			//   WHEN n.isEndDate = 1 THEN (n.startDate BETWEEN n.startDate AND n.endDate) AND NOW() >= n.startDate
			//    WHEN n.isEndDate = 0 THEN NOW() >= n.startDate
			//   END
			// ')
			;
		return $qb;
	}

	public function getActiveDataById($id)
	{
		$qb = $this->findAllActiveData();
		$qb->andWhere($qb->expr()->andX(
			$qb->expr()->like('n.id', ':id')
		))
		->setParameter('id',$id);
		return $qb;
	}

}
