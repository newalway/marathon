<?php

namespace ProjectBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Intl\Locale;

/**
 * LayoutShopRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LayoutShopRepository extends \Doctrine\ORM\EntityRepository
{
	private $qb;

	public function findAllData($arr_query_data=false, $locale=false)
    {
		// $locale = ($locale) ? $locale : Locale::getDefault();

        $this->qb = $this->createQueryBuilder('l');
		//join translation
		$this->qb->leftJoin('l.translations', 'lt')
				->select('l', 'lt')
				// ->andWhere("lt.locale = '$locale'")
				->orderBy('l.position', 'ASC')
                ->addOrderBy('l.publishDate', 'DESC')
				->addOrderBy('l.createdAt', 'DESC');

		$q = $arr_query_data['q'];
  		if($q){
			//search from translation
  			$this->qb->andWhere($this->qb->expr()->orX(
	  	      	$this->qb->expr()->like('lt.content', ':query')
			))
  			->setParameter('query', '%'.$q.'%');
  		}

  		return $this->qb;
    }

	public function findAllActiveData($arr_query_data=false, $locale=false)
    {
		$locale = ($locale) ? $locale : Locale::getDefault();
		$this->findAllData($arr_query_data, $locale);
		$this->setPublic();

		// not set local, because title can be null
		// $this->qb->andWhere("lt.locale = '$locale'");

		return $this->qb;
	}

	public function setPublic()
	{
		$this->qb->andWhere('NOW() >= l.publishDate')
			->andWhere('l.status = 1');
	}
}
