<?php

namespace ProjectBundle\Repository;

/**
 * DiscountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DiscountRepository extends \Doctrine\ORM\EntityRepository
{
	private $qb;

	private function setPublishData()
	{
		//check start_date
		$this->qb->andWhere('NOW() >= d.startDate');
		//if set is_end_date check end_date
		$this->qb->andWhere(' (CASE  WHEN d.isEndDate=1 THEN d.endDate  ELSE NOW() END) >= NOW() ');
	}

	public function findAllData($arr_query_data=false)
	{
		//QueryBuilder Expr
		$this->qb = $this->createQueryBuilder('d');
		//join translation
		$this->qb->addOrderBy('d.createdAt', 'DESC');

		$q = $arr_query_data['q'];
		if($q){
			//search from translation
			$this->qb->where($this->qb->expr()->orX(
				$this->qb->expr()->like('d.discountCode', ':query')
			))
			->setParameter('query', '%'.$q.'%');
		}
		return $this->qb;
	}

	public function findAllDataJoinedCustomerOrder($arr_query_data=false)
	{
		$this->findAllData($arr_query_data);
		$this->qb->addSelect("d, COUNT(od.id) as total_usage");
		$this->qb->leftjoin('d.customerOrders', 'od')
			->groupBy('d.id');
		return $this->qb;
	}

	public function getPublishDiscountCodeWitTotalUsage($discount_code)
	{
		//QueryBuilder Expr
		$this->qb = $this->createQueryBuilder('d');

		$this->qb->addSelect("COUNT(od.id) as total_usage")
			->leftjoin('d.customerOrders', 'od');

		if($discount_code){
			// search from translation
			$this->qb->where($this->qb->expr()->orX(
				$this->qb->expr()->eq('d.discountCode', ':discount_code')
			))
			->setParameter('discount_code', $discount_code);
		}

		// set public data
		$this->setPublishData();

		return $this->qb;
	}

	public function getDiscountCodeUsageByUser($discount_code, $user_id)
	{
		//QueryBuilder Expr
		$this->qb = $this->createQueryBuilder('d');
		$this->qb->where('d.discountCode = :discount_code')
			->setParameter('discount_code', $discount_code);

		$this->qb->innerJoin('d.customerOrders', 'od')
			->andWhere('od.user = :user_id')
			->setParameter('user_id', $user_id);
		return $this->qb;
	}

	public function getCountDiscountCodeUsageByUser($discount_code, $user_id)
	{
		$this->getDiscountCodeUsageByUser($discount_code, $user_id);
		$this->qb->select('count(d.id)');
		return $this->qb;
	}

	public function getPublishProductsByDiscountCode($discount_code)
	{
		//QueryBuilder Expr
		$this->qb = $this->createQueryBuilder('d');

		$this->qb->where('d.discountCode = :discount_code')
			->setParameter('discount_code', $discount_code)
			->innerJoin('d.products', 'dp')
			->andWhere('NOW() >= dp.publishDate')
			->andWhere('dp.status = 1');
		return $this->qb;
	}
}
