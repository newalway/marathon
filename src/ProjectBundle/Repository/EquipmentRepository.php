<?php

namespace ProjectBundle\Repository;

/**
 * EquipmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EquipmentRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllData($arr_query_data=false)
    {
        //QueryBuilder Expr
  		$qb = $this->createQueryBuilder('e');
        //join translation
		$qb->join('e.translations', 'et')
            ->select('e, et')
            ->orderBy('e.position', 'ASC')
            ->addOrderBy('e.createdAt', 'DESC');

        $q = $arr_query_data['q'];
  		if($q){
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('et.title', ':query')
  				// $qb->expr()->like('et.description', ':query')
            ))
  			->setParameter('query', '%'.$q.'%');
  		}
  		return $qb;
    }

    public function findOneByIdJoinedToProducts($catId)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT c, p FROM ProjectBundle:Equipment c
                JOIN c.products p
                WHERE c.id = :id'
            )->setParameter('id', $catId);

        try {
            return $query->getSingleResult();
            //return $query->getResult(); //return all data
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findAllActiveByProduct($locale='en')
    {
        $qb = $this->createQueryBuilder('e');
        $qb ->select('e.id','et.title')
			->join('e.products', 'p')
			->leftjoin('e.translations', 'et')
            ->andWhere($qb->expr()->andX(
				$qb->expr()->like('p.status', ':status'),
				$qb->expr()->like('et.locale', ':locale')
            ))
            ->setParameters(array(
                'status' => 1,
				'locale' => $locale
            ))
			->orderBy('e.position', 'ASC')
            ->addOrderBy('e.createdAt', 'DESC')
			->groupBy('e.id')
		;

        try {
            return $qb->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
