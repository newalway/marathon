<?php

namespace ProjectBundle\Repository;

/**
 * AgeGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AgeGroupRepository extends \Doctrine\ORM\EntityRepository
{
	public function findAllData($arr_query_data=false)
	{
		//QueryBuilder Expr
		$qb = $this->createQueryBuilder('a');
		//join translation
		$qb->join('a.translations', 'at')
			->select('a', 'at')
			->orderBy('a.position', 'ASC')
			->addOrderBy('a.createdAt', 'DESC');

		$q = $arr_query_data['q'];
		if($q){
			//search from translation
			$qb->where($qb->expr()->orX(
				$qb->expr()->like('at.title', ':query')
			))
			->setParameter('query', '%'.$q.'%');
		}
		return $qb;
	}

	public function findAllActiveByProduct($locale='en')
	{
		$qb = $this->createQueryBuilder('a');
        $qb ->select('a.id','at.title')
			->join('a.products', 'p')
			->leftjoin('a.translations', 'at')
            ->andWhere($qb->expr()->andX(
				$qb->expr()->like('p.status', ':status'),
				$qb->expr()->like('at.locale', ':locale')
            ))
            ->setParameters(array(
                'status' => 1,
				'locale' => $locale
            ))
			->orderBy('a.position', 'ASC')
            ->addOrderBy('a.createdAt', 'DESC')
			->groupBy('a.id')
		;

        try {
            return $qb->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
	}

	public function getAgeGroupByProduct($product, $locale)
	{
		$query = $this->getEntityManager()
			->createQuery(
				'SELECT ag, agt  FROM ProjectBundle:AgeGroup ag
				JOIN ag.products p
				LEFT JOIN ag.translations agt
				WHERE p.status = :status
					AND p.id = :product_id
					AND agt.locale = :locale'

			)->setParameters(array(
				'status'=>1,
				'product_id'=>$product->getId(),
				'locale'=>$locale
			));
			// ORDER BY a.position asc, a.createdAt desc'

		return $query->getResult();
		// return $query->getArrayResult();
	}

}
