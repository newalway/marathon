<?php

namespace ProjectBundle\Repository;

/**
 * StyleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StyleRepository extends \Doctrine\ORM\EntityRepository
{
		public function findAllData($arr_query_data=false)
		{
				//QueryBuilder Expr
				$qb = $this->createQueryBuilder('b');
				$qb->select('b','c')
					->leftjoin('b.styleCategories', 'c')
					->orderBy('b.position', 'ASC')
					->addOrderBy('c.position', 'ASC')
					->addOrderBy('b.createdAt', 'DESC');
				$q = $arr_query_data['q'];
				if($q){
					$qb->where($qb->expr()->orX(
						$qb->expr()->like('b.title', ':query'),
						$qb->expr()->like('b.shortDesc', ':query'),
						$qb->expr()->like('b.description', ':query'),
						$qb->expr()->like('c.title', ':query')
					))
					->setParameter('query', '%'.$q.'%');
				}
				return $qb;
		}

		public function findAllActiveData($arr_query_data=false)
	  {
			return $this->findAllData($arr_query_data)->andWhere('b.status = 1 ')->groupBy('b.id');
	  }

		public function getActiveDataById($id)
	  {
	    $qb = $this->findAllActiveData();
	    $qb->andWhere($qb->expr()->andX(
	          $qb->expr()->like('b.id', ':id')
	        ))
	        ->setParameter('id',$id)
	      ;
	    return $qb;
	  }

}
